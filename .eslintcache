[{"D:\\Projects\\timon-store\\src\\App.js":"1","D:\\Projects\\timon-store\\src\\reportWebVitals.js":"2","D:\\Projects\\timon-store\\src\\Context.js":"3","D:\\Projects\\timon-store\\src\\components\\admin\\Login.js":"4","D:\\Projects\\timon-store\\src\\index.js":"5","D:\\Projects\\timon-store\\src\\components\\Product.js":"6","E:\\Projects\\timon-store\\src\\index.js":"7","E:\\Projects\\timon-store\\src\\components\\Product.js":"8","E:\\Projects\\timon-store\\src\\components\\Home.js":"9","E:\\Projects\\timon-store\\src\\components\\admin\\Login.js":"10","E:\\Projects\\timon-store\\src\\App.js":"11","E:\\Projects\\timon-store\\src\\components\\Firebase\\firebase.js":"12","E:\\Projects\\timon-store\\src\\components\\Firebase\\index.js":"13","E:\\Projects\\timon-store\\src\\withContext.js":"14","E:\\Projects\\timon-store\\src\\reportWebVitals.js":"15","E:\\Projects\\timon-store\\src\\Context.js":"16","E:\\Projects\\timon-store\\src\\components\\Firebase\\context.js":"17","E:\\Projects\\timon-store\\src\\components\\NavBar.js":"18","E:\\Projects\\timon-store\\src\\components\\admin\\Register.js":"19","E:\\Projects\\timon-store\\src\\components\\Session\\withAuthentication.js":"20","E:\\Projects\\timon-store\\src\\components\\admin\\Profile.js":"21","E:\\Projects\\timon-store\\src\\components\\Session\\index.js":"22","E:\\Projects\\timon-store\\src\\components\\Session\\withAuthorization.js":"23","E:\\Projects\\timon-store\\src\\components\\admin\\ProductList.js":"24"},{"size":1369,"mtime":1612039304164,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1612008959133,"results":"27","hashOfConfig":"26"},{"size":95,"mtime":1612011270178,"results":"28","hashOfConfig":"26"},{"size":131,"mtime":1612038251853,"results":"29","hashOfConfig":"26"},{"size":500,"mtime":1612008959133,"results":"30","hashOfConfig":"26"},{"size":133,"mtime":1612010864493,"results":"31","hashOfConfig":"26"},{"size":683,"mtime":1612593009619,"results":"32","hashOfConfig":"33"},{"size":3610,"mtime":1612732037590,"results":"34","hashOfConfig":"33"},{"size":3081,"mtime":1612734437804,"results":"35","hashOfConfig":"33"},{"size":5659,"mtime":1612735105320,"results":"36","hashOfConfig":"33"},{"size":711,"mtime":1612734689901,"results":"37","hashOfConfig":"33"},{"size":1167,"mtime":1612687914931,"results":"38","hashOfConfig":"33"},{"size":167,"mtime":1612578660619,"results":"39","hashOfConfig":"33"},{"size":526,"mtime":1612581209745,"results":"40","hashOfConfig":"33"},{"size":375,"mtime":1612188170207,"results":"41","hashOfConfig":"33"},{"size":95,"mtime":1612188170203,"results":"42","hashOfConfig":"33"},{"size":307,"mtime":1612580415547,"results":"43","hashOfConfig":"33"},{"size":4947,"mtime":1612734120968,"results":"44","hashOfConfig":"33"},{"size":5863,"mtime":1612735170225,"results":"45","hashOfConfig":"33"},{"size":1266,"mtime":1612735058783,"results":"46","hashOfConfig":"33"},{"size":124,"mtime":1612687041637,"results":"47","hashOfConfig":"33"},{"size":163,"mtime":1612581625672,"results":"48","hashOfConfig":"33"},{"size":925,"mtime":1612581267970,"results":"49","hashOfConfig":"33"},{"size":17201,"mtime":1612689032490,"results":"50","hashOfConfig":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1e0scbw",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"g667f8",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"65"},"D:\\Projects\\timon-store\\src\\App.js",["101","102"],"D:\\Projects\\timon-store\\src\\reportWebVitals.js",[],"D:\\Projects\\timon-store\\src\\Context.js",[],"D:\\Projects\\timon-store\\src\\components\\admin\\Login.js",[],"D:\\Projects\\timon-store\\src\\index.js",[],"D:\\Projects\\timon-store\\src\\components\\Product.js",[],"E:\\Projects\\timon-store\\src\\index.js",[],["103","104"],"E:\\Projects\\timon-store\\src\\components\\Product.js",[],"E:\\Projects\\timon-store\\src\\components\\Home.js",[],"E:\\Projects\\timon-store\\src\\components\\admin\\Login.js",["105","106","107","108","109"],"E:\\Projects\\timon-store\\src\\App.js",[],"E:\\Projects\\timon-store\\src\\components\\Firebase\\firebase.js",[],"E:\\Projects\\timon-store\\src\\components\\Firebase\\index.js",[],"E:\\Projects\\timon-store\\src\\withContext.js",[],"E:\\Projects\\timon-store\\src\\reportWebVitals.js",[],"E:\\Projects\\timon-store\\src\\Context.js",[],"E:\\Projects\\timon-store\\src\\components\\Firebase\\context.js",[],"E:\\Projects\\timon-store\\src\\components\\NavBar.js",["110"],"E:\\Projects\\timon-store\\src\\components\\admin\\Register.js",["111","112","113","114"],"E:\\Projects\\timon-store\\src\\components\\Session\\withAuthentication.js",[],"E:\\Projects\\timon-store\\src\\components\\admin\\Profile.js",[],"E:\\Projects\\timon-store\\src\\components\\Session\\index.js",[],"E:\\Projects\\timon-store\\src\\components\\Session\\withAuthorization.js",[],"E:\\Projects\\timon-store\\src\\components\\admin\\ProductList.js",["115","116","117"],"import React, {Component} from \"react\";\r\nimport firebase from 'firebase/app'\r\nimport {withAuthentication} from \"../Session\";\r\nimport {\r\n    Container,\r\n    CssBaseline, Divider,\r\n    Grid, GridList, GridListTile, GridListTileBar, IconButton,\r\n    List,\r\n    ListItem, ListItemIcon,\r\n    ListItemText,\r\n    Paper, TextField,\r\n    withStyles\r\n} from \"@material-ui/core\";\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    buttonRoot: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n    imageRoot: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n    },\r\n    title: {\r\n        color: theme.palette.primary.light,\r\n    },\r\n    titleBar: {\r\n        background:\r\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n});\r\n\r\nclass ProductList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            selectedIndex: 60,\r\n            products: [],\r\n            // Form\r\n            selectedProduct: {\r\n                product_name: '',\r\n                product_detail: '',\r\n                product_price: 0,\r\n                pictures: [],\r\n            },\r\n            images: [],\r\n            disabled: false\r\n        };\r\n\r\n        this.baseState = this.state;\r\n        this.storage = this.props.firebase.storage;\r\n        this.firestore = this.props.firebase.store;\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.onFileChanged = this.onFileChanged.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        this.listener = this.props.firebase.store.collection(\"products\").onSnapshot((querySnapshot) => {\r\n            const items = [];\r\n            querySnapshot.forEach((doc) => {\r\n                items.push({...doc.data(), id: doc.id});\r\n            });\r\n            this.setState({loading: false, products: items, selectedIndex: 60, selectedProduct: this.baseState.selectedProduct});\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.listener();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const data = e.currentTarget.dataset;\r\n\r\n        if (data) {\r\n            if (data.id === \"add\") {\r\n                this.setState({selectedIndex: 60, selectedProduct: this.baseState.selectedProduct, images: []});\r\n            } else {\r\n                this.setState({selectedIndex: Number(data.key), selectedProduct: this.state.products[data.key], images: this.state.products[data.key].pictures});\r\n            }\r\n        }\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const data = this.state.selectedProduct;\r\n        const id = data['id'];\r\n        delete data['id'];\r\n\r\n        if (this.state.selectedIndex === 60 && id === undefined) {\r\n            this.props.firebase.products().add(this.state.selectedProduct).then((docRef) => {\r\n                // Upload\r\n                 this.state.images.map((image,idx) => {\r\n                    const imgName = `/images/${docRef.id}-${idx}`\r\n\r\n                    this.storage.ref(imgName).put(image).on('state_changed', (snapshot) => {\r\n                        // loading\r\n                    }, (err) => {\r\n                        console.log(err);\r\n                    }, () => {\r\n                        this.storage.ref('images').child(`${docRef.id}-${idx}`).getDownloadURL().then(uri => {\r\n                            this.props.firebase.store.collection('products').doc(docRef.id).update({\r\n                                pictures: firebase.firestore.FieldValue.arrayUnion(uri)\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        } else {\r\n            this.props.firebase.products().doc(id).set(this.state.selectedProduct).then((docRef) => {\r\n                this.state.images.map((image,idx) => {\r\n                    const uploadTask = this.props.firebase.storage.ref(`/images/${id}-${idx}`).put(image);\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    onFileChanged = (event) => {\r\n        const files = Array.from(event.target.files);\r\n        if (files.length > 5) {\r\n            alert(\"Please don't upload more than 5 files.\");\r\n        } else {\r\n            this.setState({images: files});\r\n        }\r\n        console.log(this.state.images);\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        this.setState({selectedProduct: {...this.state.selectedProduct, [event.target.name]: event.target.value}});\r\n    }\r\n\r\n    handleDelete = (event) => {\r\n        const data = event.currentTarget.dataset;\r\n\r\n        if (data.id) {\r\n            this.props.firebase.products().doc(data.id).delete().then({\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {selectedIndex, products, loading, selectedProduct, disabled, images} = this.state;\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <Container>\r\n                <CssBaseline/>\r\n                <div className={classes.root}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={4}>\r\n                            <Paper className={classes.paper}>\r\n                                <h2>Products</h2>\r\n                                <ListItem button selected={selectedIndex === 60} data-id=\"add\" onClick={this.handleChange}>\r\n                                    <ListItemIcon>\r\n                                        <InboxIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Add Product\" />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <Typography variant=\"h6\" className={classes.title}>\r\n                                    List\r\n                                </Typography>\r\n                                <List component=\"nav\" aria-label=\"secondary\">\r\n                                    {\r\n                                        (products && products.length > 0) && products.map((product, key) =>\r\n                                            <ListItem key={key} button selected={selectedIndex === key} onClick={this.handleChange} data-key={key} data-id={product.id}>\r\n                                                <ListItemText primary={product.product_name} />\r\n                                            </ListItem>\r\n                                        )\r\n                                    }\r\n                                </List>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <Paper className={classes.paper}>\r\n                                <h2>Products</h2>\r\n                                {\r\n                                    loading ? \"Loading...\" :\r\n                                        <div>\r\n                                            <form className={classes.form} noValidate onSubmit={this.onSubmit}>\r\n                                                <TextField\r\n                                                    id=\"product_name\"\r\n                                                    label=\"Product Name\"\r\n                                                    placeholder=\"Product Name\"\r\n                                                    name=\"product_name\"\r\n                                                    autoComplete=\"product_name\"\r\n                                                    //helperText=\"Full width!\"\r\n                                                    fullWidth\r\n                                                    margin=\"normal\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    autoFocus\r\n                                                    required\r\n                                                    disabled={disabled}\r\n                                                    onChange={this.onChangeHandler}\r\n                                                    variant=\"outlined\"\r\n                                                    value={selectedProduct && selectedProduct.product_name}\r\n                                                />\r\n                                                <TextField\r\n                                                    id=\"product_detail\"\r\n                                                    label=\"Product Detail\"\r\n                                                    placeholder=\"Product Detail\"\r\n                                                    name=\"product_detail\"\r\n                                                    autoComplete=\"product_detail\"\r\n                                                    //helperText=\"Full width!\"\r\n                                                    fullWidth\r\n                                                    margin=\"normal\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    required\r\n                                                    disabled={disabled}\r\n                                                    onChange={this.onChangeHandler}\r\n                                                    variant=\"outlined\"\r\n                                                    multiline={true}\r\n                                                    value={selectedProduct && selectedProduct.product_detail}\r\n                                                />\r\n                                                <TextField\r\n                                                    id=\"product_price\"\r\n                                                    label=\"Product Price\"\r\n                                                    placeholder=\"Product Price\"\r\n                                                    name=\"product_price\"\r\n                                                    autoComplete=\"product_price\"\r\n                                                    //helperText=\"Full width!\"\r\n                                                    fullWidth\r\n                                                    margin=\"normal\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    type=\"number\"\r\n                                                    autoFocus\r\n                                                    required\r\n                                                    disabled={disabled}\r\n                                                    onChange={this.onChangeHandler}\r\n                                                    variant=\"outlined\"\r\n                                                    value={selectedProduct && selectedProduct.product_price}\r\n                                                />\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    component=\"label\"\r\n                                                    style={{marginBottom: \"15px\"}}\r\n                                                >\r\n                                                    Upload File\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        onChange={this.onFileChanged}\r\n                                                        accept=\"image/*\"\r\n                                                        hidden\r\n                                                        required\r\n                                                        multiple\r\n                                                    />\r\n                                                </Button>\r\n                                                <div className={classes.imageRoot}>\r\n                                                    <GridList className={classes.gridList} cols={2.5}>\r\n                                                        {\r\n                                                            (images && images.length > 0) ? images.map((image, idx) => (\r\n                                                                    <GridListTile key={idx}>\r\n                                                                        <img src={image.name ? URL.createObjectURL(image) : image} alt={image.name ? image.name : image} />\r\n                                                                        <GridListTileBar\r\n                                                                            title={image.name ? image.name : image}\r\n                                                                            classes={{\r\n                                                                                root: classes.titleBar,\r\n                                                                                title: classes.title,\r\n                                                                            }}\r\n                                                                            actionIcon={\r\n                                                                                <IconButton aria-label={`star `}>\r\n                                                                                    <StarBorderIcon className={classes.title} />\r\n                                                                                </IconButton>\r\n                                                                            }\r\n                                                                        />\r\n                                                                    </GridListTile>\r\n                                                                ))\r\n                                                                : \"takda\"\r\n                                                        }\r\n                                                    </GridList>\r\n                                                </div>\r\n\r\n\r\n                                                <Divider/>\r\n\r\n                                                <div className={classes.buttonRoot}>\r\n                                                    <Button\r\n                                                        type=\"submit\"\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        disabled={selectedProduct && (selectedProduct.product_name === \"\" || selectedProduct.product_detail === \"\" || selectedProduct.product_price === \"\" || disabled === true)}\r\n                                                    >\r\n                                                        Save\r\n                                                    </Button>\r\n                                                    <Button style={{display: (selectedIndex === 60 && \"none\")}}\r\n                                                            variant=\"contained\" color=\"secondary\"\r\n                                                            onClick={this.handleDelete}\r\n                                                            data-id={selectedProduct && selectedProduct.id}>\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </div>\r\n\r\n                                            </form>\r\n                                        </div>\r\n                                }\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withAuthentication(withStyles(useStyles)(ProductList));\r\n",{"ruleId":"118","severity":1,"message":"119","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":12},{"ruleId":"118","severity":1,"message":"122","line":4,"column":25,"nodeType":"120","messageId":"121","endLine":4,"endColumn":29},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"118","severity":1,"message":"127","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"128","line":16,"column":9,"nodeType":"120","messageId":"121","endLine":16,"endColumn":24},{"ruleId":"118","severity":1,"message":"129","line":19,"column":21,"nodeType":"120","messageId":"121","endLine":19,"endColumn":31},{"ruleId":"118","severity":1,"message":"130","line":20,"column":16,"nodeType":"120","messageId":"121","endLine":20,"endColumn":30},{"ruleId":"118","severity":1,"message":"131","line":22,"column":9,"nodeType":"120","messageId":"121","endLine":22,"endColumn":27},{"ruleId":"118","severity":1,"message":"132","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"127","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"128","line":14,"column":9,"nodeType":"120","messageId":"121","endLine":14,"endColumn":24},{"ruleId":"118","severity":1,"message":"129","line":17,"column":21,"nodeType":"120","messageId":"121","endLine":17,"endColumn":31},{"ruleId":"133","severity":1,"message":"134","line":76,"column":21,"nodeType":"135","messageId":"136","endLine":76,"endColumn":50},{"ruleId":"137","severity":1,"message":"138","line":126,"column":52,"nodeType":"139","messageId":"140","endLine":126,"endColumn":54},{"ruleId":"137","severity":1,"message":"138","line":144,"column":51,"nodeType":"139","messageId":"140","endLine":144,"endColumn":53},{"ruleId":"118","severity":1,"message":"141","line":145,"column":27,"nodeType":"120","messageId":"121","endLine":145,"endColumn":37},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"'useContext' is defined but never used.","'FirebaseContext' is defined but never used.","'withRouter' is defined but never used.","'ToastContainer' is defined but never used.","'withAuthentication' is defined but never used.","'useEffect' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'uploadTask' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]